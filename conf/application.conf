# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="%APPLICATION_SECRET%"

play.crypto.secret="changeme"

# The application languages
# ~~~~~
play.i18n.langs=["en"]

# Registers the error handler
# ~~~~~
play.http.errorHandler = "Utils.ErrorHandler"

# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"

# Registers the filters
# ~~~~~
play.http.filters = "Utils.Filters"

play.filters {

  cors {

    # The path prefixes to filter.
    pathPrefixes = ["/"]

    # The allowed origins. If null, all origins are allowed.
    allowedOrigins = null

    # The allowed HTTP methods. If null, all methods are allowed
    allowedHttpMethods = null

    # The allowed HTTP headers. If null, all headers are allowed.
    allowedHttpHeaders = null

    # The exposed headers
    exposedHeaders = []

    # Whether to support credentials
    supportsCredentials = true

    # The maximum amount of time the CORS meta data should be cached by the client
    preflightMaxAge = 1 hour
  }

}

# The application languages
# ~~~~~
#application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=com.mysql.jdbc.Driver
db.default.url="jdbc:mysql://192.168.99.100/Visual"
db.default.username=root
db.default.password="secret"


slick.dbs.default.driver = "slick.driver.MySQLDriver$"
slick.dbs.default.db.driver = "com.mysql.jdbc.Driver"
slick.dbs.default.db.url = "jdbc:mysql://192.168.99.100/Visual?useUnicode=true&characterEncoding=UTF-8"
slick.dbs.default.db.user = "root"
slick.dbs.default.db.password = "secret"
slick.dbs.default.db.numThreads = 12

play.modules.enabled += "Jobs.JobModule"
play.modules.enabled += "Modules.SilhouetteModule"

chatwork.accesskey="cf5c7e1f5e4da02ceb1928c871e9a2a8"



# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

play.filters.headers.contentSecurityPolicy="default-src 'self'; img-src 'self' fbcdn-profile-a.akamaihd.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com *.w3.org data:; style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com *.w3.org; font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com *.w3.org; script-src 'self' clef.io oss.maxcdn.com atlasestateagents.co.uk tether.io code.jquery.com cdnjs.cloudflare.com maxcdn.bootstrapcdn.com; connect-src 'self' twitter.com *.xing.com; frame-src clef.io"

include "silhoutte.conf"